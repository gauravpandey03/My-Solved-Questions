/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* deleteDuplicates(ListNode* head) {
     ListNode* temp = head;
        ListNode* prev = nullptr;

        while (temp != nullptr && temp->next != nullptr) {
            if (temp->val != temp->next->val) {
                prev = temp;
                temp = temp->next;
            } else {
                   while (temp->next != nullptr && temp->val == temp->next->val) {
                    ListNode* duplicate = temp->next;
                    temp->next = temp->next->next;
                    delete duplicate; 
                }

                if (prev != nullptr) {
                    prev->next = temp->next;
                    delete temp; 
                    temp = prev->next;
                } else {
                    head = temp->next;
                    delete temp;  
                    temp = head;
                }
            }
        }

        return head;
    }
};