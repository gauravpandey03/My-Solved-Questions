class Solution {
public:
    bool exist(vector<vector<char>>& board, string word) {
        int m=board.size();
        int n =board[0].size();
        for(int i=0;i<m;i++){
            for(int j=0;j<n;j++){
                bool res=dfs(board,word,i,j,0);
                if(res){
                    return 1;
                }
            }
        }
       return 0; 
    }

    private:
      bool dfs(vector<vector<char>>& board, string word,int i ,int j,int index ){
        if(index == word.size()) {
            return true; 
            }
        if(i<0||j<0||i>=board.size()||j>=board[0].size()|| board[i][j]!=word[index]){
            return 0;
        }
  
        char temp = board[i][j]; 
        board[i][j] = '#';        
        bool flag = dfs(board, word, i - 1, j, index + 1) || 
                     dfs(board, word, i + 1, j, index + 1) ||
                     dfs(board, word, i, j - 1, index + 1) ||
                     dfs(board, word, i, j + 1, index + 1);
       board[i][j] = temp;
       return flag;
      } 
};