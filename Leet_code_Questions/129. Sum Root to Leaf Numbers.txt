/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left),
 * right(right) {}
 * };
 */
class Solution {
public:
    int sumNumbers(TreeNode* root) { return dfs(root, 0); }

    int dfs(TreeNode* node, int currentsum) {
        if (node == nullptr) {
            return 0;
        }
        int newsum = currentsum * 10 + node->val;
        if (node->left == nullptr && node->right == nullptr) {
            return newsum;
        }
        int left = dfs(node->left, newsum);
        int right = dfs(node->right, newsum);

        return left + right;
    }
};
