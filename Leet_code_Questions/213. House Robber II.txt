class Solution {
public:
    int rob(vector<int>& nums) {
        int n = nums.size();
        if (n == 0) {
            return 0;
        }
        if (n == 1) {
            return nums[0];
        }
        if (n == 2) {
            return max(nums[0], nums[1]);
        }

        
        auto fun = [&](int start, int end) {
            vector<int> v(n, 0);

            v[start] = nums[start];
            v[start + 1] = max(nums[start], nums[start + 1]);

            for (int i = start + 2; i <= end; i++) {
                v[i] = max(v[i - 1], v[i - 2] + nums[i]);
            }

            return v[end];
        };

        int with_first = fun(0, n - 2);
        int with_last = fun(1, n - 1);

        return max(with_first, with_last);
    }
};
