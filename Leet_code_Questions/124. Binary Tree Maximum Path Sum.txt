/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int maxPathSum(TreeNode* root) {
       unordered_map<TreeNode*, int> memo;
        dfs(root, memo);
        int max=0;
        for(auto &node: memo){
            if(max < get(node).second()){
                max=get(node).second();
            }
        }
        return max;
    }

    unordered_map<TreeNode*,int> dfs(TreeNode* node,unordered_map<TreeNode*,int> &memo){
        if(node==NULL){
            return 0;
        }
        int left= dfs(node->left,memo);
        int right= dfs(node->right,memo);

        memo[node]=node->val+left+right;
        
    }
};