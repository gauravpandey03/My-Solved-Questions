class Solution {
public:
    TreeNode* dfs(TreeNode* node, TreeNode* p, TreeNode* q) {
        if (node == NULL || p == NULL || q == NULL) {
            return NULL;
        }

       

        if (node == p || node == q) {
            return node;
        }

        TreeNode* left = dfs(node->left, p, q);
        TreeNode* right = dfs(node->right, p, q);

        if (left != NULL && right != NULL) {
            return node;
        }

        if (left != NULL) {
            return left;
        } else {
            return right;
        }

        return NULL;
    }

    TreeNode* lowestCommonAncestor(TreeNode* root, TreeNode* p, TreeNode* q) {
        return dfs(root, p, q);
    }
};
