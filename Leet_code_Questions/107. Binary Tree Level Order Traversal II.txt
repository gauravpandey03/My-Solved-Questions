class Solution {
public:
    vector<vector<int>> levelOrderBottom(TreeNode* root) {
        vector<vector<int>> result;
        if (root == nullptr) {
            return result;
        }
        dfs(root, result, 0);
        reverse(result.begin(),result.end());
         return result;
    }
    void dfs(TreeNode* node, vector<vector<int>>& result, int level) {

        if (result.size() <= level) {
            result.push_back(vector<int>());
        }
        result[level].push_back(node->val);
        if (node->left) {
            dfs(node->left, result, level + 1);
        }
        if (node->right) {
            dfs(node->right, result, level + 1);
        }
    }
};